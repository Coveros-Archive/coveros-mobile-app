plugins {
    id "org.sonarqube" version "2.5"
}
apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'jacoco-android'
apply plugin: 'maven'

sonarqube {
    properties {
        property "sonar.host.url", sonarUrl
        property "sonar.projectKey", "coveros_mobile_app"
        property "sonar.projectName", "Coveros Mobile App"
        property "sonar.projectVersion", AppVersion
        property "sonar.jacoco.itReportPath", "$buildDir/aggregatedReports/coverage/InstrumentedCoverage.exec"
        property "sonar.junit.reportsPath", "$buildDir/aggregatedReports/tests" //created directory in the copyFiles task
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", "src/test, src/androidTest" // where the tests are located
        property "sonar.scm.provider", "git"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/testDebugUnitTest.exec" // path to coverage reports
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

ext.nexus = {
    credentials {
        username nexusUser
        password nexusPass
    }
    url nexusSnapshotRepoURL
    url nexusReleaseRepoURL
}

repositories {
    maven(nexus)
    jcenter()
    maven { url 'http://wordpress-mobile.github.io/WordPress-Android' }
}

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: nexusSnapshotRepoURL) {
                authentication(userName: nexusUser, password: nexusPass);
            }
            repository(url: nexusReleaseRepoURL) {
                authentication(userName: nexusUser, password: nexusPass);
            }
        }
    }
}

task aggregateUnitTestResults(type: Copy) {
    from "$buildDir/test-results/testDebugUnitTest"
    from "$buildDir/outputs/androidTest-results/connected"
    into "$buildDir/aggregatedReports/tests"
}

task aggregateCoverageResults(type: Copy) {
    from "$buildDir/outputs/code-coverage/connected"
    into "$buildDir/aggregatedReports/coverage"
    rename {
        fileName ->
            "InstrumentedCoverage.exec"
    }
}

task aggregateTestData {
    dependsOn 'aggregateUnitTestResults'
    dependsOn 'aggregateCoverageResults'
}

task fullSonarAnalysis {
    dependsOn 'installDebug'
    dependsOn 'jacocoTestReport'
    dependsOn 'connectedAndroidTest'
    dependsOn 'aggregateTestData'
    dependsOn 'sonarqube'
    tasks.findByName('jacocoTestReport').mustRunAfter 'installDebug'
    tasks.findByName('aggregateTestData').mustRunAfter 'jacocoTestReport'
    tasks.findByName('aggregateTestData').mustRunAfter 'connectedAndroidTest'
    tasks.findByName('sonarqube').mustRunAfter 'aggregateTestData'
}

//App version to track differences
def APP_VERSION = "1.0.0"
ext.set('AppVersion', APP_VERSION)

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.coveros.coverosmobileapp"
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile('com.android.support.test:runner:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile('com.android.support.test:rules:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile 'org.mockito:mockito-core:1.10.19'

    // for appium tests
    testCompile ('io.appium:java-client:4.1.2', {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    })

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'


    // adding for testing Wordpress integration
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.android.volley:volley:1.0.0'

    // decoding decimal unicode received from Wordpress
    compile 'org.apache.commons:commons-text:1.1'

    // handling OAuth for Wordpress
    compile 'com.automattic:wordpresscom-rest:1.+'

    compile (group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.10-java7') {
        exclude group: 'xmlpull'
    }
    // required for local unit tests (JUnit 4 framework)
    testCompile 'junit:junit:4.12'
    // for testing error message
    testCompile 'org.mockito:mockito-core:2.1.0'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'

    // for appium tests
    testCompile ('io.appium:java-client:4.1.2', {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    })


}

//Defined reports generated
jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled false
    xml.enabled false
}
